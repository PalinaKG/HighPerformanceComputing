#!/bin/bash
# 02614 - High-Performance Computing, January 2022
# 
# batch script to run matmult on a decidated server in the hpcintro
# queue
#
# Author: Bernd Dammann <bd@cc.dtu.dk>
#
#BSUB -J jacobi_base
#BSUB -o jacobi_base%J.out
#BSUB -q hpcintro
#BSUB -n 1
#BSUB -R "rusage[mem=2048]"
#BSUB -W 60
# uncomment the following line, if you want to assure that your job has
# a whole CPU for itself (shared L3 cache)
# #BSUB -R "span[hosts=1] affinity[socket(1)]"

# define the driver name to use
# valid values: matmult_c.studio, matmult_f.studio, matmult_c.gcc or
# matmult_f.gcc
#
EXECUTABLE=poisson_j

# grid sizes
#
SIZES="1 5 10 15 20 25 40 60 80 100 120 200 "

#max number of iterations

ITER="1000"

#tolerance

TOL="0.01"

#start T

TSTART="10"

#output type

OTYPE="5"

# enable(1)/disable(0) result checking
export MATMULT_COMPARE=0

COMPS="-O2 -O3 -Ofast"
COMP_OPTS="funsafe-loop-optimizations floop-interchange fpeel-loops funroll-loops"

# start the collect command with the above settings
lscpu | egrep 'Model name|Socket|Thread|NUMA|CPU\(s\)|cache'
module load gcc
for COMP in $COMPS
do
	make clean
	make OPT="-g $COMP"
	FILE_NAME="jacobi_base"$COMP".dat"
	rm  Compile_Data/$FILE_NAME
	for S in $SIZES
	do
		./$EXECUTABLE $S $ITER $TOL $TSTART $OTYPE  | grep -v CPU >> Compile_Data/$FILE_NAME
	done
done

for COMP in $COMP_OPTS
do
        make clean
        make OPT="-g -Ofast $COMP"
        FILE_NAME="jacobi_base-Ofast-"$COMP".dat"
        rm  Compile_Data/$FILE_NAME
        for S in $SIZES
        do
                ./$EXECUTABLE $S $ITER $TOL $TSTART $OTYPE  | grep -v CPU >> Compile_Data/$FILE_NAME
        done
done
